<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>zs</string>
	</array>
	<key>name</key>
	<string>ZenScript</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>numbers</string>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)([LlFfUuDd]|UL|ul)?\b</string>
			<key>name</key>
			<string>constant.numeric.zenscript</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#code</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>arrays</string>
			<key>match</key>
			<string>\b((?:[a-z]\w*\.)*[A-Z]+\w*)(?=\[)</string>
			<key>name</key>
			<string>storage.type.object.array.zenscript</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.zenscript</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.zenscript</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.zenscript</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>variable.other.zenscript</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.control.zenscript</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.zenscript</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>keyword.control.zenscript</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>items and blocks</string>
					<key>match</key>
					<string>(&lt;)\b(.*?)(:(.*?(:(\*|\d+)?)?)?)(&gt;)</string>
					<key>name</key>
					<string>keyword.other.zenscript</string>
				</dict>
			</array>
		</dict>
		<key>class</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.zenscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.zenscript</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>class</string>
			<key>match</key>
			<string>(zenClass)\s+(\w+)</string>
			<key>name</key>
			<string>meta.class.zenscript</string>
		</dict>
		<key>class-constructor</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.zenscript</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>class constructor</string>
			<key>match</key>
			<string>\b(zenConstructor)\s*(?=\()</string>
			<key>name</key>
			<string>meta.class.zenscript</string>
		</dict>
		<key>code</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#class</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class-constructor</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dots</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#quotes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessors</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#var</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#import</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>inline comments</string>
					<key>match</key>
					<string>\s*((#|//).*$\n?)</string>
					<key>name</key>
					<string>comment.line.number-sign</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\/\*</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>comment.block</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>block comments</string>
					<key>end</key>
					<string>\*\/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>comment.block</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>comment</key>
			<string>constants (true, false, null)</string>
			<key>match</key>
			<string>\b(true|false|null)\b</string>
			<key>name</key>
			<string>constant.language.zenscript</string>
		</dict>
		<key>dots</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.zenscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.zenscript</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.control.zenscript</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>dots</string>
			<key>match</key>
			<string>\b(\w+)(\.)(\w+)((\.)(\w+))*</string>
			<key>name</key>
			<string>plain.text.zenscript</string>
		</dict>
		<key>function-call</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.zenscript</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>function calls</string>
			<key>match</key>
			<string>(?!function)([A-Za-z_$][\w$]*)\s*(?=\()</string>
			<key>name</key>
			<string>meta.function-call.zenscript</string>
		</dict>
		<key>functions</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.zenscript</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.zenscript</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>functions</string>
			<key>match</key>
			<string>function\s+([A-Za-z_$][\w$]*)\s*(?=\()</string>
			<key>name</key>
			<string>meta.function.zenscript</string>
		</dict>
		<key>import</key>
		<dict>
			<key>begin</key>
			<string>\b(import)\b\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.import.zenscript</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>package import</string>
			<key>end</key>
			<string>\s*(;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.zenscript</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.import.zenscript</string>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>control keywords</string>
					<key>match</key>
					<string>\b(in|has|void|as|version|for|return|while|break|instanceof)\b</string>
					<key>name</key>
					<string>keyword.control.zenscript</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>storage keywords</string>
					<key>match</key>
					<string>\b(any|bool|byte|short|int|long|float|double|string)\b</string>
					<key>name</key>
					<string>storage.type.zenscript</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>as holder keywords</string>
					<key>match</key>
					<string>\b(?&lt;=(as\s))[a-zA-Z]+\b</string>
					<key>name</key>
					<string>storage.type.zenscript</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>function keyword</string>
					<key>match</key>
					<string>\b(function)\b</string>
					<key>name</key>
					<string>storage.type.function.zenscript</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>statement keywords</string>
					<key>match</key>
					<string>\b(if|else)\b</string>
					<key>name</key>
					<string>keyword.control.conditional.zenscript</string>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>math operators</string>
					<key>match</key>
					<string>(\.\.|\+=|\+|-=|-|\*=|\*|\/=|\/|%=|%|\|=|\||\|\||&amp;=|&amp;&amp;|&amp;|\^=|\^|\?|:|~=|~|;|&lt;=|&lt;|&gt;=|&gt;|==|=|!=|!|\$)</string>
					<key>name</key>
					<string>keyword.operator</string>
				</dict>
			</array>
		</dict>
		<key>preprocessors</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.zenscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.zenscript</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.language.zenscript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(\s*)(#)(debug|ignoreBracketErrors|norun|loader|priority|ikwid|profile|zslint|modloaded)</string>
			<key>name</key>
			<string>constant.numeric.zenscript</string>
		</dict>
		<key>quotes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quote string</string>
					<key>contentName</key>
					<string>string.other.zenscript</string>
					<key>end</key>
					<string>\"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.zenscript</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quote string</string>
					<key>contentName</key>
					<string>string.other.zenscript</string>
					<key>end</key>
					<string>\'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.zenscript</string>
				</dict>
			</array>
		</dict>
		<key>var</key>
		<dict>
			<key>comment</key>
			<string>var</string>
			<key>match</key>
			<string>\b(var|val|static|global)\b</string>
			<key>name</key>
			<string>storage.type</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.zenscript</string>
</dict>
</plist>
